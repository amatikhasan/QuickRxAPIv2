plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3' // Assuming current version, adjust if necessary
	id 'io.spring.dependency-management' version '1.1.7' // Assuming current version
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // For JSR 303 validation

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson for JWT if needed, or just core

	runtimeOnly 'com.mysql:mysql-connector-j'

	// Springdoc OpenAPI for Swagger UI (use a version compatible with Spring Boot 3.x)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // Check latest version

	// Lombok for less boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
